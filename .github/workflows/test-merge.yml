# This is a basic workflow to help you get started with Actions

name: merge-model-changes-into-another-repo

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # number of commits to fetch, 0 = all history and tags for all branches, default = 1
          #ref: integration #specifies branch, tag or SHA, otherwise default branch
      
    # Deploy to another repo
      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@github.com:jliwill/test-1.git
          BRANCH: abc-temp
          FOLDER: archives
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
      
     # Checkout target repo 
      - name: Check out the target private repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: jliwill/test-1
          ref: abc-temp
          
      # modify file path to be same as main branch
      - name: edit path and move files
        run: |
           mkdir -p services/rules/lib/archives
           chmod +rwx services/rules/lib/archives
           mv ./*?_flat.json ./services/rules/lib/archives
           git add --all
           git commit -m "creating path and moving flat files"
           git push
     
      # modify file path to be same as main branch
#       - name: merge files from branch into dev branch
#         run: |
#           git checkout dev
#           git checkout abc-temp services/rules/lib/archives/*
#           git status
      
      
      
      
      
#       - name: print test-1 abc
#         run: |
#           git remote add -f sourcerepo https://github.com/jliwill/test-1.git
#           git checkout -b staging-branch sourcerepo/main
#           git subtree split -P src -b src-branch
#           git checkout main
#           git subtree add -P src src-branch
#           git branch -D src staging-branch
#           git remote rm sourcerepo
          
          
      
      
#       - name: Check out my current repo (test-2)
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
      
#       - name: print test-2 abc
#         run: |
#           cd src
#           cat abc.md
          
